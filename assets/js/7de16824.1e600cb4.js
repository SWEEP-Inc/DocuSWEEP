"use strict";(self.webpackChunksweep_docs_website=self.webpackChunksweep_docs_website||[]).push([[5443],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),c=p(n),f=o,m=c["".concat(u,".").concat(f)]||c[f]||d[f]||a;return n?r.createElement(m,s(s({ref:t},l),{},{components:n})):r.createElement(m,s({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=f;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[c]="string"==typeof e?e:o,s[1]=i;for(var p=2;p<a;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8273:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:2},s="Outputs",i={unversionedId:"Communication Between Tasks/outputs",id:"Communication Between Tasks/outputs",title:"Outputs",description:"The output of a task is made available to its succesors in the variable predecessor_outputs. The contents of this dict depend on the workflow definition, as well as the task executable.",source:"@site/docs/Communication Between Tasks/outputs.md",sourceDirName:"Communication Between Tasks",slug:"/Communication Between Tasks/outputs",permalink:"/Communication Between Tasks/outputs",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Inputs",permalink:"/Communication Between Tasks/inputs"},next:{title:"Setting up the API",permalink:"/Code Examples/setting-up-the-api"}},u={},p=[],l={toc:p},c="wrapper";function d(e){let{components:t,...a}=e;return(0,o.kt)(c,(0,r.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"outputs"},"Outputs"),(0,o.kt)("p",null,"The output of a task is made available to its succesors in the variable ",(0,o.kt)("strong",{parentName:"p"},"predecessor_outputs"),". The contents of this dict depend on the workflow definition, as well as the task executable."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"If a task has the ",(0,o.kt)("strong",{parentName:"p"},"static_output")," property set, this value will be stored in ",(0,o.kt)("strong",{parentName:"p"},"predecessor_outputs"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"If the executable of the task has a return value, the contents of this are also be stored in ",(0,o.kt)("strong",{parentName:"p"},"predecessor_outputs"),"."))),(0,o.kt)("p",null,"Only function-based tasks have return values. The only requirement of the return value is that it is a dict."),(0,o.kt)("p",null,"See\n",(0,o.kt)("a",{target:"_blank",href:n(3685).Z},"lamba_function_template.py"),"\nfor an example of a function with a valid return value."),(0,o.kt)("p",null,"Containers do not have return values."),(0,o.kt)("p",null,"Container-based tasks behave just like function-based tasks in a workflow, except:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"They do not receive input (not from predecessors, not static input)."),(0,o.kt)("li",{parentName:"ol"},"They do not output anything to their successors."),(0,o.kt)("li",{parentName:"ol"},"Their status is defined by their exit code. This is the exit code of the docker container,\nwhich is the exit code of the command run inside the container. Exit code 0 means success.")))}d.isMDXComponent=!0},3685:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/files/lambda_function_template-197b902fee589e8dfa60d42e6e74c8dc.py"}}]);