(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[864],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),f=u(n),d=o,m=f["".concat(p,".").concat(d)]||f[d]||l[d]||a;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},5669:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return u},toc:function(){return c},default:function(){return f}});var r=n(2122),o=n(9756),a=(n(7294),n(3905)),i=["components"],s={},p="Example 8: A dynamic workflow with static output",u={unversionedId:"Example Workflows/example-8",id:"Example Workflows/example-8",isDocsHomePage:!1,title:"Example 8: A dynamic workflow with static output",description:"Container-based tasks do not output any values to the workflow scheduler, but one way to propagate information through the workflow via container-based tasks is to use static_output property:",source:"@site/docs/Example Workflows/example-8.md",sourceDirName:"Example Workflows",slug:"/Example Workflows/example-8",permalink:"/DocuSWEEP/Example Workflows/example-8",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/Example Workflows/example-8.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Example 7: A workflow with dynamic container overrides",permalink:"/DocuSWEEP/Example Workflows/example-7"}},c=[{value:"workflow definition",id:"workflow-definition",children:[]},{value:"DAG representation",id:"dag-representation",children:[]}],l={toc:c};function f(e){var t=e.components,s=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},l,s,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"example-8-a-dynamic-workflow-with-static-output"},"Example 8: A dynamic workflow with static output"),(0,a.kt)("p",null,"Container-based tasks do not output any values to the workflow scheduler, but one way to propagate information through the workflow via container-based tasks is to use ",(0,a.kt)("strong",{parentName:"p"},"static_output")," property:"),(0,a.kt)("p",null,"An example based on the previous one, but with a 3rd task that gets information from task 2:"),(0,a.kt)("h3",{id:"workflow-definition"},"workflow definition"),(0,a.kt)("p",null,"see ",(0,a.kt)("a",{parentName:"p",href:"examples/example8/wf_def_static_output.json"},"examples/example8/wf_def_static_output.json")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'\n{\n  "workflow_id": "wf_static_output",\n  "config": {},\n  "tasks": [\n    {\n      "id": "1",\n      "execution_configurations": [\n        {\n          "function_def_id": "prepFunc",\n          "priority": 1\n        }\n      ],\n      "successors": [\n        2\n      ],\n      "properties": {\n        "position": "start"\n      }\n    },\n    {\n      "id": 2,\n      "execution_configurations": [\n        {\n          "container_def_id": "cdef_hello_world",\n          "priority": 1\n        }\n      ],\n      "successors": [\n        3\n      ],\n      "properties": {\n        "scatter": "predecessor_outputs[\'1\'][\'env_vars\']",\n        "command": [\n          "sh",\n          "-c",\n          "printenv IND"\n        ],\n        "environment": "predecessor_outputs[\'1\'][\'env_vars\']",\n        "static_output": "predecessor_outputs[\'1\'][\'env_vars\']"\n      }\n    },\n    {\n      "id": 3,\n      "execution_configurations": [\n        {\n          "container_def_id": "cdef_hello_world",\n          "priority": 1\n        }\n      ],\n      "successors": [\n        4\n      ],\n      "properties": {\n        "follow": 2,\n        "command": [\n          "sh",\n          "-c",\n          "printenv IND"\n        ],\n        "environment": "predecessor_outputs[\'2\'][\'static_output\']",\n        "static_output": "predecessor_outputs[\'2\'][\'static_output\']"\n      }\n    },\n    {\n      "id": 4,\n      "execution_configurations": [\n        {\n          "container_def_id": "cdef_hello_world",\n          "priority": 1\n        }\n      ],\n      "successors": [],\n      "properties": {\n        "follow": 2,\n        "command": [\n          "sh",\n          "-c",\n          "printenv IND"\n        ],\n        "environment": "predecessor_outputs[\'3\'][\'static_output\']"\n      }\n    }\n  ]\n}\n\n\n')),(0,a.kt)("h3",{id:"dag-representation"},"DAG representation"),(0,a.kt)("p",null,'The DAG of the completed workflow with the evaluated "environment" values annotated:'),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Example 7",src:n(3854).Z})),(0,a.kt)("p",null,"Tasks 2_A, 2_B, 2_C were run in separate containers with different values for environment variable IND."))}f.isMDXComponent=!0},3854:function(e,t,n){"use strict";t.Z=n.p+"assets/images/example8-2aec5521b2044e577fd7e7d21c1e3e59.png"}}]);