"use strict";(self.webpackChunksweep_docs_website=self.webpackChunksweep_docs_website||[]).push([[2313],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(n),d=r,f=u["".concat(p,".").concat(d)]||u[d]||m[d]||o;return n?a.createElement(f,i(i({ref:t},c),{},{components:n})):a.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5888:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:7},i="Creating container definitions",l={unversionedId:"The Workflow Concept/creating-container-definitions",id:"The Workflow Concept/creating-container-definitions",title:"Creating container definitions",description:"A container definition contains three elements:",source:"@site/docs/The Workflow Concept/creating-container-definitions.md",sourceDirName:"The Workflow Concept",slug:"/The Workflow Concept/creating-container-definitions",permalink:"/The Workflow Concept/creating-container-definitions",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Creating function definitions",permalink:"/The Workflow Concept/creating-function-definitions"},next:{title:"Inputs",permalink:"/Communication Between Tasks/inputs"}},p={},s=[],c={toc:s},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"creating-container-definitions"},"Creating container definitions"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"A container definition contains three elements:"),(0,r.kt)("ol",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ol"},"Where: A destination (cloud provider) where to run the container"),(0,r.kt)("li",{parentName:"ol"},"What: A docker image that the container will be based on"),(0,r.kt)("li",{parentName:"ol"},"How: Information for defining the container (memory, cpu, command to run)"))),(0,r.kt)("p",null,"Container tasks are placed in a workflow by specifying a ",(0,r.kt)("strong",{parentName:"p"},"container_def_id")," in the ",(0,r.kt)("strong",{parentName:"p"},"execution_configurations")," of the workflow definition. This must correspond to the id of a ",(0,r.kt)("em",{parentName:"p"},"container_definition")," that has been registered in SWEEP:"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"container definition")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"  {\n      'id' : str,\n      'destination_id' : str,\n      'image_name' : str,\n      'image_tag' : str,\n      'cpu' : float,\n      'memory' : int,\n      'command' : str list\n  }\n")),(0,r.kt)("p",null,"required:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"id"),": unique identifier of the container definition.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"destination_id"),": id of a destination, must be one that has already been registered in SWEEP. See ",(0,r.kt)("a",{parentName:"p",href:"/The%20Workflow%20Concept/creating-destinations"},"Creating destinations"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"image_name")," and ",(0,r.kt)("strong",{parentName:"p"},"image_tag"),": define the image to base the container on."))),(0,r.kt)("p",null,"optional:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"cpu_units"),": number of CPU units allocated")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"memory"),": max memory allocated in MB")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"command"),": defines the command to run when starting the container, overriding the command specified in the docker image definition."))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Environment Variables")),(0,r.kt)("p",null,"Unlike in function definitions, environment variables are not set in the container definition. Instead, they are set in the task properties:"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Environment Properties"),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"'environment' : [\n                {'name': 'EVAR1', 'value': '1'},\n                {'name': 'EVAR2', 'value': 'hello'}\n              ]\n"))),(0,r.kt)("p",null,"Refer to the ",(0,r.kt)("a",{parentName:"p",href:"definitions-of-task-properties"},"definitions of task properties")," page for additional details on how to define task properties for an executable."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Runtime resources of the container"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"CPU units and memory are allocated and charged for even if not fully utilized.")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Values must be valid for the specified CP. See ",(0,r.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/AmazonECS/latest/userguide/fargate-task-defs.html"},"https://docs.aws.amazon.com/AmazonECS/latest/userguide/fargate-task-defs.html")," (Task CPU and Memory) for valid configurations for these values for Fargate.")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"If not specified, default values (depending on CP) specified in the config file are used.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE:")," the specified image and tag must exist in the local docker registry."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"  ",(0,r.kt)("strong",{parentName:"p"},"trying to push another container definition with the same image_name and image_tag will")),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"update the cpu, memory and command settings"),(0,r.kt)("li",{parentName:"ul"},"NOT overwrite the uploaded image (even if it has changed in the local docker repo) unless the optional argument --overwrite is given to sweep upload_container_def"))),(0,r.kt)("p",null,"The upload may take some time."))}m.isMDXComponent=!0}}]);