"use strict";(self.webpackChunksweep_docs_website=self.webpackChunksweep_docs_website||[]).push([[5501],{3905:(e,t,n)=>{n.d(t,{Zo:()=>f,kt:()=>k});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},f=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},l="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,f=s(e,["components","mdxType","originalType","parentName"]),l=c(n),d=o,k=l["".concat(p,".").concat(d)]||l[d]||u[d]||i;return n?r.createElement(k,a(a({ref:t},f),{},{components:n})):r.createElement(k,a({ref:t},f))}));function k(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[l]="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7716:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const i={sidebar_position:3},a="Definitions of tasks",s={unversionedId:"The Workflow Concept/definitions-of-tasks",id:"The Workflow Concept/definitions-of-tasks",title:"Definitions of tasks",description:"Tasks are defined by one or more executables, as well as additional orchestration information.",source:"@site/docs/The Workflow Concept/definitions-of-tasks.md",sourceDirName:"The Workflow Concept",slug:"/The Workflow Concept/definitions-of-tasks",permalink:"/The Workflow Concept/definitions-of-tasks",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Creating workflow configurations",permalink:"/The Workflow Concept/creating-workflow-configurations"},next:{title:"Definitions of task properties",permalink:"/The Workflow Concept/definitions-of-task-properties"}},p={},c=[],f={toc:c},l="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(l,(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"definitions-of-tasks"},"Definitions of tasks"),(0,o.kt)("p",null,"Tasks are defined by one or more ",(0,o.kt)("strong",{parentName:"p"},"executables"),", as well as additional orchestration information."),(0,o.kt)("p",null,"Functions and containers are the two types of executables supported by SWEEP."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"id"),": unique identifier")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"execution_configurations"),": list of dicts that defines what ",(0,o.kt)("strong",{parentName:"p"},"executables")," this task can consist of, and their priority."),(0,o.kt)("p",{parentName:"li"},"  for ",(0,o.kt)("em",{parentName:"p"},"function-based tasks"),": ",(0,o.kt)("strong",{parentName:"p"},"function_def_id")," is given, it must correspond to the id of a ",(0,o.kt)("strong",{parentName:"p"},"function definition")," that has been registered in SWEEP. See ",(0,o.kt)("a",{parentName:"p",href:"/The%20Workflow%20Concept/creating-function-definitions"},"Creating function definitions"),"."),(0,o.kt)("p",{parentName:"li"},"  for ",(0,o.kt)("em",{parentName:"p"},"container-based tasks"),": ",(0,o.kt)("strong",{parentName:"p"},"container_def_id")," is given, it must correspond to the id of a ",(0,o.kt)("strong",{parentName:"p"},"container definition")," that has been registered in SWEEP. See ",(0,o.kt)("a",{parentName:"p",href:"/The%20Workflow%20Concept/creating-container-definitions"},"Creating container definitions"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"successors"),": a list of tasks that should be invoked when the task finishes. this defines the DAG representing the workflow.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"properties"),": optional task properties dict"))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Task Definition"),(0,o.kt)("pre",{parentName:"blockquote"},(0,o.kt)("code",{parentName:"pre",className:"language-python"},"{\n    'id' : str,\n    'execution_configurations' : [\n        {\n        'function_def_id' | 'container_def_id' : str,\n        'priority' : int\n        }\n    ]\n    'successors' : str list,\n    'properties' : dict\n}\n"))))}u.isMDXComponent=!0}}]);